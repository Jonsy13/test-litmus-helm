name: LitmusPortal-E2E
on:
  issue_comment:
    types: [created]
    branches:
      - master

jobs:
  tests:
    if: contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/run-e2e-portal')
    runs-on: ubuntu-20.04
    steps:
      - name: Notification for Starting Testing.
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            ****
            **Test Status:** The testing has been started please wait for the results ...
      #Using the last commit id of pull request
      - uses: octokit/request-action@v2.x
        id: get_PR_commits
        with:
          route: GET /repos/:repo/pulls/:pull_number/commits
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set commit to output
        id: getcommit
        run: |
          prsha=$(echo $response | jq '.[-1].sha'  | tr -d '"')
          echo "::set-output name=sha::$prsha"
        env:
          response: ${{ steps.get_PR_commits.outputs.data }}

      - uses: actions/checkout@v2
        with:
          ref: ${{steps.getcommit.outputs.sha}}
          fetch-depth: 0

      - uses: octokit/request-action@v2.x
        name: Getting the files changed in current Pull-Request
        id: get_files
        with:
          route: GET /repos/:repo/pulls/:pull_number/files
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setting up KinD Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.7.0"

      - name: Configuring and Testing the Cluster Installation
        run: |
          kubectl cluster-info --context kind-kind
          kind get kubeconfig --internal >$HOME/.kube/config
          kubectl get nodes
          kubectl get pods -n kube-system

      - name: Deploying Litmus-Portal using **Helm chart**
        run: |
          kubectl create ns litmus
          helm install litmuschaos --namespace litmus ./charts/litmus-2-0-0-beta/

      - name: Waiting for Litmus-Portal to be ready and port-forwarding the frontend port
        run: |
          kubectl get pods -n litmus
          kubectl get deployments -o wide -n litmus
          kubectl wait --for=condition=Ready pods --all --namespace litmus --timeout=120s
          export frontendPodName=$(kubectl get pods -l component=litmusportal-frontend --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}' -n litmus)
          export frontendPodPort=$(kubectl get pod $frontendPodName --template='{{(index (index .spec.containers 0).ports 0).containerPort}}{{"\n"}}' --namespace litmus)
          kubectl port-forward $frontendPodName -n litmus 3001:$frontendPodPort &

      # Cloning the litmus-e2e repo for E2E tests.
      - name: Cloning the litmus-e2e Repo
        run: |
          git clone https://github.com/litmuschaos/litmus-e2e.git -b litmus-portal

      - name: Running basic tests (Login and Onbaording Tests)
        uses: cypress-io/github-action@v2
        continue-on-error: false
        with:
          spec: cypress/integration/Basic_Setup/**/*.spec.js
          working-directory: litmus-e2e/Cypress/
          config-file: cypress.prod.json

      - name: Check the test run
        run: |
          echo "TEST_RUN=true" >> $GITHUB_ENV

      - name: Check for all the jobs are succeeded
        if: ${{ success() && env.TEST_RUN == 'true' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            **Test Result:** All tests are passed
            **Run ID:** [${{ env.RUN_ID }}](https://github.com/Jonsy13/test-litmus-helm/actions/runs/${{ env.RUN_ID }})
          reactions: hooray
        env:
          RUN_ID: ${{ github.run_id }}

      - name: Check for any job failed
        if: ${{ failure() }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            **Test Failed:** Some tests are failed please check
            **Run ID:** [${{ env.RUN_ID }}](https://github.com/Jonsy13/test-litmus-helm/actions/runs/${{ env.RUN_ID }})
          reactions: confused
        env:
          RUN_ID: ${{ github.run_id }}

      - name: Check if any test ran or not
        if: env.TEST_RUN != 'true'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            **Test Result:** No test found
            **Run ID:** [${{ env.RUN_ID }}](https://github.com/Jonsy13/test-litmus-helm/actions/runs/${{ env.RUN_ID }})
          reactions: eyes
        env:
          RUN_ID: ${{ github.run_id }}

      - name: Deleting KinD cluster
        if: ${{ always() }}
        run: kind delete cluster
